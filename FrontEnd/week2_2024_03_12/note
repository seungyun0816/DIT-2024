프론트엔드 개발 환경 준비

----------------------------
HTML(Hyper Text Markup Lang

----------------------------
SPA,MPA차이

MPA(Multiple Page Application) : 여러개의 페이지로 구성된 Applicaiton. 여러 페이지를 만들고 각 페이지 요청 할 때 마다 요소들을 불러온다.
SPA(Single Page Application) : 한개의 페이지로 구성된 Application. 페이지의 내용을 최초 한 번 불러온다.
----------------------------
JAVA script(이하 JS)

웹 페이지에서 동적인 페이지를 구현하기 위해 만들어짐.

2015년 ES6발표(JS표준화)이전에는 브라우저마다 벤더들이 달라서 표현되는 내용이 달랐음.
JS 개발 이전에는 모든 웹 페이지 정보를 DB에서 처리해야하기 때문에 DB의 부하가 높았음.
JS 개발 이후에는 클라이언트 단위에서 처리 가능 한 정보들을 처리해주므로 DB의 부하가 줄어듬.
----------------------------
JS 자료형

Number      | 1,2,3,4
String      | "Hello",'hi'
Boolean     | true,false
Null        | null
Undefined   | undefined
Array       | [1,2,3,4]
Object      | { a: 21, b: "can", c: true}
----------------------------
JS 연산자


----------------------------
함수 선언식과 표현식의 차이

함수 선언식 : 함수 선언문이 모두 처리 된 이후 script가 실행

함수 표현식 : 함수가 실행되는 시점에만 메모리를 할당받아 실행
----------------------------
개발 환경 준비

Node.js : JS를 서버에서도 사용 할 수 있게 해주는 프로그램.

npm : Node.js를 위한 패키지 매니저. 개발에 필요한 패키지들을 관리하기 위함
----------------------------
리액트 | UI를 만들기 위한 JS 라이브러리

리액트의 장점
  -Virtualt DOM : 업데이트와 렌더링이 빠른 구조의 DOM사용.
  -컴포넌트 기반 구조 : 모든 페이지를 컴포넌트로 구성하고 하나의 컴포넌트는 또 다른 컴포넌트를 가짐.
                      컴포넌트는 재사용성,유지보수,구조를 개발하기 편함.
  -오픈소스 : 원하는 정보를 찾기 쉬워짐
  -React Native : 모바일 환경 UI 프레임워크로 개발하기 편함.

리액트의 단점
  -많은 양의 학습량
  -state의 관리 복잡도

리액트와 유사한 UI개발 도구
  -Vue.js : 오픈소스 프로젝트로 만들어진 프레임워크.
----------------------------
프레임워크와 라이브러리

프레임워크 | 프로그램의 흐름의 제어 권한을 프레임워크가 가지고있음
라이브러리 | 프로그랭믜 흐름에 대한 제어 권한이 개발자에게 있고 필요한 부분만 사용 가능함.
