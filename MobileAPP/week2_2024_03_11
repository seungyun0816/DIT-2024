모바일 앱 개발 환경 구축

--------------------------------------------------------------------------
모바일 운영체제 비교

-안드로이드
  >제조사 : google
  >개발 언어 : JAVA,Kotlin,C,C++(JAVA와 Kotlin이 주류)
  >커널 : Linux

-ios
  >제조사 : apple
  >개발 언어 : C,C++,Objective-C,Swift
  >커널 : UNIX
--------------------------------------------------------------------------
안드로이드의 특징

리눅스 커널 기반
애플리케이션 프레임워크
자바 언어 사용
그래픽 (2D그래픽은 2D라이브러리,3D는 OpenGL ES 2.0 규격 기반)
SQLite DB 지원
여러 오디오,비디오 규격 지원 (MP3,JPG,PNG,GIF등)
센서 지원(카메라,나침반,GPS,가속도계)
개발환경지원 (에뮬레이터,안드로이드 스튜디오)
--------------------------------------------------------------------------
개발 준비 사항

JAVA언어
XML
안드로이드 스튜디오 사용
--------------------------------------------------------------------------
AVD(AndroidVirtualMachine

안드로이드 휴대폰을 구동하는 가상장치.
안드로이드 스튜디오에서 사용하여 진짜 휴대폰처럼 테스트 가능.
--------------------------------------------------------------------------
패키지 폴더 구성

manifest : XML파일,앱의 이름,컴포넌트등 전반적인 정보
java : JAVA 소스 파일들이 들어있는 폴더
res : 여러 리소스들이 저장되는 폴더
  drawable = 해상도 별로 아이콘 파일들 저장
  layout = 화면 구성을 정의
  values = 문자열과 같은 리소스 저장
  menu = 메뉴 리소스 저장
Gradle Scripts : 그레이들 빌드시 필요한 스크립트
MainActivity.java : 메인 액티비티를 나타낼 JAVA소스 파일. 앱이 시작 될 때 가장 먼저 보여지는 화면이며 UI,액티비티를 관리
activity_main.xml : MainActivity.java에서 정의 한 액티비티의 UI를 만들고 레이아웃을 정의하는 파일
                    XML파일로서 버튼,텍스트뷰,이미지뷰등의 위젯 및 레이아웃 매니저를 이용해 화면을 구성
--------------------------------------------------------------------------
애플리케이션 컴포넌트

앱은 컴포넌트들로 구성되며 각 컴포넌트는 독립된 엔티티로 존재하고 정해진 역할을 수행한다.

액티비티 : UI를 가지고 하나의 작업을 담당하는 컴포넌트. 하나의 앱은 여러 컴포넌트를 가질 수 있으며
          하나의 화면은 하나의 액티비티라고 생각하면 된다. Activity라는 클래스를 상속받아 작성된다.
서비스   : 백그라운드에서 실행되는 컴포넌트로서 보통 오랫동안 실행되는 작업과 원격 프로세스를 위한 작업을 위해 사용된다.
          서비스는 UI를 가지지 않는다. Service라는 클래스를 상속받아 작성된다.
방송 수신자 : 방송을 받으면 반응하는 컴포넌트이다. 많은 반응들이 시스템에서 발생하며 예시로는 배터리 상태,카메라 촬영기능 작동을 알리는 것이 있다.
             방송 수신자는 UI를 가지지 않는다. BroadcastReceiver 클래스를 상속받아 작성된다.
콘텐츠 제공자 : 데이터를 관리하고, 다른 앱에 데이터를 제공하는 컴포넌트.데이터는 파일 시스템,SQLite DB,웹 상에 저장 될 수도 있다.
              콘텐츠 제공자를 통해 다른 앱은 데이트를 쿼리,변경 할 수 있다. 콘텐츠 제공자는 ContentProvider 클래스를 상속받아 작성된다.

앱 간에 컴포넌트를 실행시키기 위해서는 intent를 작성하여 컴포넌트를 활성화 및 실행 할 수있다.
--------------------------------------------------------------------------
일반적인 애플리케이션 작성 절차

1.UI작성 (XML)
2.JAVA코드 작성 (JAVA)
3.ManifestFIle작성 (XML)
--------------------------------------------------------------------------
자바 소스 분석

앱에서 자바 소스코드는 main()함수가 아닌 onCreate()함수부터 실행된다
--------------------------------------------------------------------------
*IntelliJ IDEA
